apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: create-workflow-template
  title: Create Workflow Template
  description: Template for new workflow creation.
spec:
  owner: xwing-libra
  type: workflow

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Provide Workflow specification
      required:
        - name
        - description
        - scId
        - owner
        - workspace
        - scheduler
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the workflow
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: Workflow business purpose description
          ui:options:
            rows: 5
        scId:
          title: SC Id
          type: number
          description: Service Control identifier
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
        workspace:
          title: Workspace
          type: string
          description: Workspace context
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System
        scheduler:
          title: Scheduler
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Component
              spec.type: scheduler
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOrganizations:
              - data-console
            allowedOwners:
              - data-console
            allowedRepos:
              - workshops-state
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN


  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          workspace: ${{ parameters.workspace }}
          scId: ${{ parameters.scId }}
          scheduler: ${{ parameters.scheduler }}

    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish PR
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: cloud-project-${{ parameters.name }}
        title: ":sparkles: Create workflow ${{ parameters.name }}"
        description: Create new workspace ${{ parameters.name }}
        targetPath: ${{ parameters.workspace | parseEntityRef | pick('name')  }}/${{ parameters.name }}
        commintMessage: ":sparkles: Create workflow ${{ parameters.name }}"
        token: ${{ secrets.USER_OAUTH_TOKEN }}

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: https://github.com/data-console/workshops-state
        catalogInfoPath: "/blob/main/${{ parameters.workspace | parseEntityRef | pick('name') }}/${{ parameters.name }}/catalog-info.yaml"
        optional: true

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: PR
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
